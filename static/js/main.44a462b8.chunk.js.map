{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","analytics","Site","props","state","isOnPrototype","toggleState","bind","this","setState","id","onClick","Prototype","className","React","Component","Bulles","class","Presentation","isOnLightbox","NumberText","textelire","useAuthState","user","SignOut","ChatRoom","SignIn","provider","GoogleAuthProvider","signInWithPopup","currentUser","signOut","dummy","useRef","messagesRef","collection","query","orderBy","limitToLast","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","key","message","ref","onSubmit","value","onChange","target","placeholder","type","disabled","messageClass","src","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.44a462b8.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './App.css';\r\n\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/analytics';\r\n\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyCc56Iksic3DyqOSsKhF-8l1EXRh-cF8SY\",\r\n  authDomain: \"youkhatvfour.firebaseapp.com\",\r\n  projectId: \"youkhatvfour\",\r\n  storageBucket: \"youkhatvfour.appspot.com\",\r\n  messagingSenderId: \"1012311611964\",\r\n  appId: \"1:1012311611964:web:16de4b315e4127e8dd0139\",\r\n  measurementId: \"G-N5Z5SMPMY4\"\r\n})\r\n\r\nconst auth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\nconst analytics = firebase.analytics();\r\n\r\nfunction App() {\r\n const OnPrototype = false;\r\n  return (\r\n    <div className=\"App\">\r\n      <Site />\r\n      <Bulles />\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Site extends React.Component {\r\n  \r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n     isOnPrototype: false\r\n    }\r\n \r\n    this.toggleState = this.toggleState.bind(this);\r\n  }\r\n    \r\n  toggleState() {\r\n  this.setState ({\r\n   isOnPrototype:!this.state.isOnPrototype }\r\n  )\r\n } \r\n\r\n  render(){\r\n   if(this.state.isOnPrototype){\r\n     return(\r\n       <>\r\n       <div id=\"BoutonToggle\">\r\n       <button onClick={this.toggleState}>YouKhAt</button>\r\n       </div>\r\n     <Prototype />\r\n     </>   \r\n     )\r\n     }\r\n   else{\r\n     return(\r\n     <>\r\n     <div id=\"BulleToggle\">\r\n      <div className=\"bulle\" onClick={this.toggleState}><h1>Clavardez!</h1></div>\r\n      </div>\r\n     <Presentation />\r\n     </>\r\n     )          \r\n   }       \r\n }\r\n}\r\n\r\nfunction Bulles() {\r\n  return (\r\n    <div id=\"background-wrap\">\r\n    <div class=\"bubble x1\"></div>\r\n    <div class=\"bubble x2\"></div>\r\n    <div class=\"bubble x3\"></div>\r\n    <div class=\"bubble x4\"></div>\r\n    <div class=\"bubble x5\"></div>\r\n    <div class=\"bubble x6\"></div>\r\n    <div class=\"bubble x7\"></div>\r\n    <div class=\"bubble x8\"></div>\r\n    <div class=\"bubble x9\"></div>\r\n    <div class=\"bubble x10\"></div>\r\n</div>\r\n  )\r\n}\r\n\r\nclass Presentation extends React.Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n     isOnLightbox: false,\r\n     NumberText: 0\r\n    }\r\n \r\n    this.toggleState = this.toggleState.bind(this);\r\n  }\r\n    \r\n  toggleState() {\r\n  this.setState ({\r\n   isOnLightbox:!this.state.isOnLightbox \r\n  })\r\n } \r\n\r\n render() {\r\n  const texte = [\"Ce truc a été fait avec React et c'est très cool\", \r\n  \"Firebase est trop fort utilisez-le!\", \r\n  \"CodeAcademy est nice aussi allez acheter!\"]\r\n  const textelire = texte[this.state.NumberText]\r\n  if(this.state.isOnLightbox) {\r\n  return (\r\n  <div className=\"Intro\">\r\n    <div className=\"backgroundlightbox\">\r\n    <div className=\"lightbox\">\r\n      <div className=\"Headerlightbox\">\r\n      <button onClick={this.toggleState}>shut the fuck up</button>\r\n      </div>\r\n      <p>{textelire}</p>\r\n    </div>\r\n    </div>\r\n<section>\r\n    <div id = \"bloc1\" className=\"bullesection\">\r\n        <h1>Avec React.js</h1>\r\n    </div>\r\n    <div id = \"bloc2\" className=\"bullesection\">\r\n        <h1>Avec une base de données</h1>\r\n    </div>\r\n    <div id = \"bloc3\" className=\"bullesection\">\r\n        <h1>Appris sur codeacadamy</h1>\r\n    </div>\r\n</section>\r\n</div>\r\n  )\r\n  }\r\n  else {\r\n    return (\r\n      <div className=\"Intro\">\r\n  <section>\r\n      <div id = \"bloc1\" className=\"bullesection\" onClick={() => {\r\n        this.toggleState();\r\n        this.setState ({\r\n          NumberText: 0\r\n        })}}\r\n        >\r\n          <h1>Avec React.js</h1>\r\n      </div>\r\n      <div id = \"bloc2\" className=\"bullesection\" onClick={() => {\r\n        this.toggleState();\r\n        this.setState ({\r\n          NumberText: 1\r\n        })}} >\r\n          <h1>Avec une base de données</h1>\r\n      </div>\r\n      <div id = \"bloc3\" className=\"bullesection\" onClick={() => {\r\n        this.toggleState();\r\n        this.setState ({\r\n          NumberText: 2\r\n        })}}>\r\n          <h1>Appris sur codeacadamy</h1>\r\n      </div>\r\n  </section>\r\n  </div>\r\n    )\r\n  }\r\n}\r\n}\r\n\r\n/* Prototype */\r\n\r\nfunction Prototype() {\r\n  const [user] = useAuthState(auth);\r\n return (\r\n  <div className=\"Prototype\">\r\n  <header>\r\n    <h1>YouKhAt</h1>\r\n    <SignOut />\r\n  </header>\r\n  {user ? <ChatRoom /> : <SignIn />}\r\n</div>\r\n )\r\n}\r\n\r\n/* Gestion de connection */\r\n\r\nfunction SignIn() {\r\n\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <section>\r\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Connecter avec Google</button>\r\n    </section> \r\n    </>\r\n  )\r\n\r\n}\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Déconnecter</button>\r\n  )\r\n}\r\n\r\n\r\n/* Gestion du clavardage */\r\n\r\nfunction ChatRoom() {\r\n  const dummy = useRef();\r\n  const messagesRef = firestore.collection('messages');\r\n  const query = messagesRef.orderBy('createdAt').limitToLast(50);\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n\r\n  const [formValue, setFormValue] = useState('');\r\n\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    })\r\n\r\n    setFormValue('');\r\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n\r\n  return (\r\n    <section>\r\n    <main>\r\n\r\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n\r\n      <span ref={dummy}></span>\r\n\r\n    </main>\r\n\r\n    <form onSubmit={sendMessage}>\r\n\r\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Écrire votre message\" />\r\n\r\n      <button type=\"submit\" disabled={!formValue}>Envoyer</button>\r\n\r\n    </form>\r\n    </section>\r\n  )\r\n}\r\n\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (<>\r\n    <div className={`message ${messageClass}`}>\r\n      <button>delete</button>\r\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\r\n      <p>{text}</p>\r\n    </div>\r\n  </>)\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}